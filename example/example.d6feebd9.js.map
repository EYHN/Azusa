{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"THREE\"","webpack:///./node_modules/events/events.js","webpack:///./src/static/cha.mp3","webpack:///./src/static/9s.jpg","webpack:///./src/lib/LuminosityHighPassShader.js","webpack:///./src/lib/CopyShader.js","webpack:///./src/lib/EffectComposer.js","webpack:///./src/lib/RenderPass.js","webpack:///./src/lib/ShaderPass.js","webpack:///./src/lib/UnrealBloomPass.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","THREE","ReflectOwnKeys","R","Reflect","ReflectApply","apply","target","receiver","args","Function","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","Number","isNaN","EventEmitter","init","this","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","$getMaxListeners","that","_addListener","type","listener","prepend","events","existing","warning","TypeError","newListener","emit","unshift","push","length","warned","w","Error","String","emitter","count","console","warn","_onceWrap","state","fired","wrapFn","wrapped","arguments","removeListener","_listeners","unwrap","evlistener","arr","ret","Array","unwrapListeners","arrayClone","listenerCount","copy","set","arg","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","err","message","context","handler","len","listeners","addListener","on","prependListener","once","prependOnceListener","list","position","originalListener","shift","index","pop","spliceOne","off","removeAllListeners","keys","rawListeners","eventNames","LuminosityHighPassShader","shaderID","uniforms","tDiffuse","luminosityThreshold","smoothWidth","defaultColor","Color","defaultOpacity","vertexShader","join","fragmentShader","CopyShader","opacity","camera","geometry","FullScreenQuad","EffectComposer","renderer","renderTarget","parameters","minFilter","LinearFilter","magFilter","format","RGBAFormat","stencilBuffer","size","getSize","Vector2","_pixelRatio","getPixelRatio","_width","width","_height","height","WebGLRenderTarget","texture","renderTarget1","renderTarget2","clone","writeBuffer","readBuffer","renderToScreen","passes","ShaderPass","copyPass","clock","Clock","assign","swapBuffers","tmp","addPass","pass","getDrawingBufferSize","setSize","insertPass","splice","isLastEnabledPass","passIndex","enabled","render","deltaTime","getDelta","currentRenderTarget","getRenderTarget","maskActive","il","needsSwap","stencilFunc","NOTEQUAL","EQUAL","MaskPass","ClearMaskPass","setRenderTarget","reset","dispose","effectiveWidth","effectiveHeight","setPixelRatio","pixelRatio","Pass","clear","OrthographicCamera","PlaneBufferGeometry","material","_mesh","Mesh","RenderPass","scene","overrideMaterial","clearColor","clearAlpha","clearDepth","constructor","oldClearColor","oldClearAlpha","oldAutoClear","autoClear","getClearColor","getHex","getClearAlpha","setClearColor","autoClearColor","autoClearDepth","autoClearStencil","shader","textureID","ShaderMaterial","UniformsUtils","defines","fsQuad","UnrealBloomPass","resolution","strength","radius","threshold","x","y","pars","renderTargetsHorizontal","renderTargetsVertical","nMips","resx","Math","round","resy","renderTargetBright","generateMipmaps","renderTargetHorizonal","renderTargetVertical","highPassShader","highPassUniforms","materialHighPassFilter","separableBlurMaterials","kernelSizeArray","getSeperableBlurMaterial","compositeMaterial","getCompositeMaterial","needsUpdate","bloomTintColors","Vector3","copyShader","copyUniforms","materialCopy","blending","AdditiveBlending","depthTest","depthWrite","transparent","basic","MeshBasicMaterial","disable","STENCIL_TEST","map","inputRenderTarget","BlurDirectionX","BlurDirectionY","enable","kernelRadius","KERNEL_RADIUS","SIGMA","colorTexture","texSize","direction"],"mappings":"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","file":"example.d6feebd9.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = THREE;","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","module.exports = __webpack_public_path__ + \"media/cha.mp3\";","module.exports = __webpack_public_path__ + \"media/9s.jpg\";","/**\r\n * @author bhouston / http://clara.io/\r\n *\r\n * Luminosity\r\n * http://en.wikipedia.org/wiki/Luminosity\r\n */\r\n\r\nTHREE.LuminosityHighPassShader = {\r\n\r\n\tshaderID: \"luminosityHighPass\",\r\n\r\n\tuniforms: {\r\n\r\n\t\t\"tDiffuse\": { value: null },\r\n\t\t\"luminosityThreshold\": { value: 1.0 },\r\n\t\t\"smoothWidth\": { value: 1.0 },\r\n\t\t\"defaultColor\": { value: new THREE.Color( 0x000000 ) },\r\n\t\t\"defaultOpacity\": { value: 0.0 }\r\n\r\n\t},\r\n\r\n\tvertexShader: [\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\t\"vUv = uv;\",\r\n\r\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\tfragmentShader: [\r\n\r\n\t\t\"uniform sampler2D tDiffuse;\",\r\n\t\t\"uniform vec3 defaultColor;\",\r\n\t\t\"uniform float defaultOpacity;\",\r\n\t\t\"uniform float luminosityThreshold;\",\r\n\t\t\"uniform float smoothWidth;\",\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\r\n\r\n\t\t\t\"vec3 luma = vec3( 0.299, 0.587, 0.114 );\",\r\n\r\n\t\t\t\"float v = dot( texel.xyz, luma );\",\r\n\r\n\t\t\t\"vec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );\",\r\n\r\n\t\t\t\"float alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\",\r\n\r\n\t\t\t\"gl_FragColor = mix( outputColor, texel, alpha );\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join(\"\\n\")\r\n\r\n};\r\n","/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * Full-screen textured quad shader\r\n */\r\n\r\nTHREE.CopyShader = {\r\n\r\n\tuniforms: {\r\n\r\n\t\t\"tDiffuse\": { value: null },\r\n\t\t\"opacity\":  { value: 1.0 }\r\n\r\n\t},\r\n\r\n\tvertexShader: [\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\t\"vUv = uv;\",\r\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" ),\r\n\r\n\tfragmentShader: [\r\n\r\n\t\t\"uniform float opacity;\",\r\n\r\n\t\t\"uniform sampler2D tDiffuse;\",\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\r\n\t\t\t\"gl_FragColor = opacity * texel;\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" )\r\n\r\n};\r\n","/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.EffectComposer = function ( renderer, renderTarget ) {\r\n\r\n\tthis.renderer = renderer;\r\n\r\n\tif ( renderTarget === undefined ) {\r\n\r\n\t\tvar parameters = {\r\n\t\t\tminFilter: THREE.LinearFilter,\r\n\t\t\tmagFilter: THREE.LinearFilter,\r\n\t\t\tformat: THREE.RGBAFormat,\r\n\t\t\tstencilBuffer: false\r\n\t\t};\r\n\r\n\t\tvar size = renderer.getSize( new THREE.Vector2() );\r\n\t\tthis._pixelRatio = renderer.getPixelRatio();\r\n\t\tthis._width = size.width;\r\n\t\tthis._height = size.height;\r\n\r\n\t\trenderTarget = new THREE.WebGLRenderTarget( this._width * this._pixelRatio, this._height * this._pixelRatio, parameters );\r\n\t\trenderTarget.texture.name = 'EffectComposer.rt1';\r\n\r\n\t} else {\r\n\r\n\t\tthis._pixelRatio = 1;\r\n\t\tthis._width = renderTarget.width;\r\n\t\tthis._height = renderTarget.height;\r\n\r\n\t}\r\n\r\n\tthis.renderTarget1 = renderTarget;\r\n\tthis.renderTarget2 = renderTarget.clone();\r\n\tthis.renderTarget2.texture.name = 'EffectComposer.rt2';\r\n\r\n\tthis.writeBuffer = this.renderTarget1;\r\n\tthis.readBuffer = this.renderTarget2;\r\n\r\n\tthis.renderToScreen = true;\r\n\r\n\tthis.passes = [];\r\n\r\n\t// dependencies\r\n\r\n\tif ( THREE.CopyShader === undefined ) {\r\n\r\n\t\tconsole.error( 'THREE.EffectComposer relies on THREE.CopyShader' );\r\n\r\n\t}\r\n\r\n\tif ( THREE.ShaderPass === undefined ) {\r\n\r\n\t\tconsole.error( 'THREE.EffectComposer relies on THREE.ShaderPass' );\r\n\r\n\t}\r\n\r\n\tthis.copyPass = new THREE.ShaderPass( THREE.CopyShader );\r\n\r\n\tthis.clock = new THREE.Clock();\r\n\r\n};\r\n\r\nObject.assign( THREE.EffectComposer.prototype, {\r\n\r\n\tswapBuffers: function () {\r\n\r\n\t\tvar tmp = this.readBuffer;\r\n\t\tthis.readBuffer = this.writeBuffer;\r\n\t\tthis.writeBuffer = tmp;\r\n\r\n\t},\r\n\r\n\taddPass: function ( pass ) {\r\n\r\n\t\tthis.passes.push( pass );\r\n\r\n\t\tvar size = this.renderer.getDrawingBufferSize( new THREE.Vector2() );\r\n\t\tpass.setSize( size.width, size.height );\r\n\r\n\t},\r\n\r\n\tinsertPass: function ( pass, index ) {\r\n\r\n\t\tthis.passes.splice( index, 0, pass );\r\n\r\n\t},\r\n\r\n\tisLastEnabledPass: function ( passIndex ) {\r\n\r\n\t\tfor ( var i = passIndex + 1; i < this.passes.length; i ++ ) {\r\n\r\n\t\t\tif ( this.passes[ i ].enabled ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\trender: function ( deltaTime ) {\r\n\r\n\t\t// deltaTime value is in seconds\r\n\r\n\t\tif ( deltaTime === undefined ) {\r\n\r\n\t\t\tdeltaTime = this.clock.getDelta();\r\n\r\n\t\t}\r\n\r\n\t\tvar currentRenderTarget = this.renderer.getRenderTarget();\r\n\r\n\t\tvar maskActive = false;\r\n\r\n\t\tvar pass, i, il = this.passes.length;\r\n\r\n\t\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\t\tpass = this.passes[ i ];\r\n\r\n\t\t\tif ( pass.enabled === false ) continue;\r\n\r\n\t\t\tpass.renderToScreen = ( this.renderToScreen && this.isLastEnabledPass( i ) );\r\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime, maskActive );\r\n\r\n\t\t\tif ( pass.needsSwap ) {\r\n\r\n\t\t\t\tif ( maskActive ) {\r\n\r\n\t\t\t\t\tvar context = this.renderer.context;\r\n\r\n\t\t\t\t\tcontext.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\r\n\r\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime );\r\n\r\n\t\t\t\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.swapBuffers();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( THREE.MaskPass !== undefined ) {\r\n\r\n\t\t\t\tif ( pass instanceof THREE.MaskPass ) {\r\n\r\n\t\t\t\t\tmaskActive = true;\r\n\r\n\t\t\t\t} else if ( pass instanceof THREE.ClearMaskPass ) {\r\n\r\n\t\t\t\t\tmaskActive = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.renderer.setRenderTarget( currentRenderTarget );\r\n\r\n\t},\r\n\r\n\treset: function ( renderTarget ) {\r\n\r\n\t\tif ( renderTarget === undefined ) {\r\n\r\n\t\t\tvar size = this.renderer.getSize( new THREE.Vector2() );\r\n\t\t\tthis._pixelRatio = this.renderer.getPixelRatio();\r\n\t\t\tthis._width = size.width;\r\n\t\t\tthis._height = size.height;\r\n\r\n\t\t\trenderTarget = this.renderTarget1.clone();\r\n\t\t\trenderTarget.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\r\n\r\n\t\t}\r\n\r\n\t\tthis.renderTarget1.dispose();\r\n\t\tthis.renderTarget2.dispose();\r\n\t\tthis.renderTarget1 = renderTarget;\r\n\t\tthis.renderTarget2 = renderTarget.clone();\r\n\r\n\t\tthis.writeBuffer = this.renderTarget1;\r\n\t\tthis.readBuffer = this.renderTarget2;\r\n\r\n\t},\r\n\r\n\tsetSize: function ( width, height ) {\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\r\n\t\tvar effectiveWidth = this._width * this._pixelRatio;\r\n\t\tvar effectiveHeight = this._height * this._pixelRatio;\r\n\r\n\t\tthis.renderTarget1.setSize( effectiveWidth, effectiveHeight );\r\n\t\tthis.renderTarget2.setSize( effectiveWidth, effectiveHeight );\r\n\r\n\t\tfor ( var i = 0; i < this.passes.length; i ++ ) {\r\n\r\n\t\t\tthis.passes[ i ].setSize( effectiveWidth, effectiveHeight );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tsetPixelRatio: function ( pixelRatio ) {\r\n\r\n\t\tthis._pixelRatio = pixelRatio;\r\n\r\n\t\tthis.setSize( this._width, this._height );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n\r\nTHREE.Pass = function () {\r\n\r\n\t// if set to true, the pass is processed by the composer\r\n\tthis.enabled = true;\r\n\r\n\t// if set to true, the pass indicates to swap read and write buffer after rendering\r\n\tthis.needsSwap = true;\r\n\r\n\t// if set to true, the pass clears its buffer before rendering\r\n\tthis.clear = false;\r\n\r\n\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\r\n\tthis.renderToScreen = false;\r\n\r\n};\r\n\r\nObject.assign( THREE.Pass.prototype, {\r\n\r\n\tsetSize: function ( /* width, height */ ) {},\r\n\r\n\trender: function ( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\r\n\r\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// Helper for passes that need to fill the viewport with a single quad.\r\nTHREE.Pass.FullScreenQuad = ( function () {\r\n\r\n\tvar camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\r\n\tvar geometry = new THREE.PlaneBufferGeometry( 2, 2 );\r\n\r\n\tvar FullScreenQuad = function ( material ) {\r\n\r\n\t\tthis._mesh = new THREE.Mesh( geometry, material );\r\n\r\n\t};\r\n\r\n\tObject.defineProperty( FullScreenQuad.prototype, 'material', {\r\n\r\n\t\tget: function () {\r\n\r\n\t\t\treturn this._mesh.material;\r\n\r\n\t\t},\r\n\r\n\t\tset: function ( value ) {\r\n\r\n\t\t\tthis._mesh.material = value;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( FullScreenQuad.prototype, {\r\n\r\n\t\trender: function ( renderer ) {\r\n\r\n\t\t\trenderer.render( this._mesh, camera );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\treturn FullScreenQuad;\r\n\r\n} )();\r\n","/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\r\n\r\n\tTHREE.Pass.call( this );\r\n\r\n\tthis.scene = scene;\r\n\tthis.camera = camera;\r\n\r\n\tthis.overrideMaterial = overrideMaterial;\r\n\r\n\tthis.clearColor = clearColor;\r\n\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 0;\r\n\r\n\tthis.clear = true;\r\n\tthis.clearDepth = false;\r\n\tthis.needsSwap = false;\r\n\r\n};\r\n\r\nTHREE.RenderPass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\r\n\r\n\tconstructor: THREE.RenderPass,\r\n\r\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\r\n\r\n\t\tvar oldAutoClear = renderer.autoClear;\r\n\t\trenderer.autoClear = false;\r\n\r\n\t\tthis.scene.overrideMaterial = this.overrideMaterial;\r\n\r\n\t\tvar oldClearColor, oldClearAlpha;\r\n\r\n\t\tif ( this.clearColor ) {\r\n\r\n\t\t\toldClearColor = renderer.getClearColor().getHex();\r\n\t\t\toldClearAlpha = renderer.getClearAlpha();\r\n\r\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.clearDepth ) {\r\n\r\n\t\t\trenderer.clearDepth();\r\n\r\n\t\t}\r\n\r\n\t\trenderer.setRenderTarget( this.renderToScreen ? null : readBuffer );\r\n\r\n\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\r\n\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\r\n\t\trenderer.render( this.scene, this.camera );\r\n\r\n\t\tif ( this.clearColor ) {\r\n\r\n\t\t\trenderer.setClearColor( oldClearColor, oldClearAlpha );\r\n\r\n\t\t}\r\n\r\n\t\tthis.scene.overrideMaterial = null;\r\n\t\trenderer.autoClear = oldAutoClear;\r\n\r\n\t}\r\n\r\n} );\r\n","/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.ShaderPass = function ( shader, textureID ) {\r\n\r\n\tTHREE.Pass.call( this );\r\n\r\n\tthis.textureID = ( textureID !== undefined ) ? textureID : \"tDiffuse\";\r\n\r\n\tif ( shader instanceof THREE.ShaderMaterial ) {\r\n\r\n\t\tthis.uniforms = shader.uniforms;\r\n\r\n\t\tthis.material = shader;\r\n\r\n\t} else if ( shader ) {\r\n\r\n\t\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\r\n\r\n\t\tthis.material = new THREE.ShaderMaterial( {\r\n\r\n\t\t\tdefines: Object.assign( {}, shader.defines ),\r\n\t\t\tuniforms: this.uniforms,\r\n\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\tfragmentShader: shader.fragmentShader\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tthis.fsQuad = new THREE.Pass.FullScreenQuad( this.material );\r\n\r\n};\r\n\r\nTHREE.ShaderPass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\r\n\r\n\tconstructor: THREE.ShaderPass,\r\n\r\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\r\n\r\n\t\tif ( this.uniforms[ this.textureID ] ) {\r\n\r\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\r\n\r\n\t\t}\r\n\r\n\t\tthis.fsQuad.material = this.material;\r\n\r\n\t\tif ( this.renderToScreen ) {\r\n\r\n\t\t\trenderer.setRenderTarget( null );\r\n\t\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer.setRenderTarget( writeBuffer );\r\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\r\n\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\r\n\t\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n} );\r\n","/**\r\n * @author spidersharma / http://eduperiment.com/\r\n *\r\n * Inspired from Unreal Engine\r\n * https://docs.unrealengine.com/latest/INT/Engine/Rendering/PostProcessEffects/Bloom/\r\n */\r\n\r\nTHREE.UnrealBloomPass = function ( resolution, strength, radius, threshold ) {\r\n\r\n\tTHREE.Pass.call( this );\r\n\r\n\tthis.strength = ( strength !== undefined ) ? strength : 1;\r\n\tthis.radius = radius;\r\n\tthis.threshold = threshold;\r\n\tthis.resolution = ( resolution !== undefined ) ? new THREE.Vector2( resolution.x, resolution.y ) : new THREE.Vector2( 256, 256 );\r\n\r\n\t// create color only once here, reuse it later inside the render function\r\n\tthis.clearColor = new THREE.Color( 0, 0, 0 );\r\n\r\n\t// render targets\r\n\tvar pars = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBAFormat };\r\n\tthis.renderTargetsHorizontal = [];\r\n\tthis.renderTargetsVertical = [];\r\n\tthis.nMips = 5;\r\n\tvar resx = Math.round( this.resolution.x / 2 );\r\n\tvar resy = Math.round( this.resolution.y / 2 );\r\n\r\n\tthis.renderTargetBright = new THREE.WebGLRenderTarget( resx, resy, pars );\r\n\tthis.renderTargetBright.texture.name = \"UnrealBloomPass.bright\";\r\n\tthis.renderTargetBright.texture.generateMipmaps = false;\r\n\r\n\tfor ( var i = 0; i < this.nMips; i ++ ) {\r\n\r\n\t\tvar renderTargetHorizonal = new THREE.WebGLRenderTarget( resx, resy, pars );\r\n\r\n\t\trenderTargetHorizonal.texture.name = \"UnrealBloomPass.h\" + i;\r\n\t\trenderTargetHorizonal.texture.generateMipmaps = false;\r\n\r\n\t\tthis.renderTargetsHorizontal.push( renderTargetHorizonal );\r\n\r\n\t\tvar renderTargetVertical = new THREE.WebGLRenderTarget( resx, resy, pars );\r\n\r\n\t\trenderTargetVertical.texture.name = \"UnrealBloomPass.v\" + i;\r\n\t\trenderTargetVertical.texture.generateMipmaps = false;\r\n\r\n\t\tthis.renderTargetsVertical.push( renderTargetVertical );\r\n\r\n\t\tresx = Math.round( resx / 2 );\r\n\r\n\t\tresy = Math.round( resy / 2 );\r\n\r\n\t}\r\n\r\n\t// luminosity high pass material\r\n\r\n\tif ( THREE.LuminosityHighPassShader === undefined )\r\n\t\tconsole.error( \"THREE.UnrealBloomPass relies on THREE.LuminosityHighPassShader\" );\r\n\r\n\tvar highPassShader = THREE.LuminosityHighPassShader;\r\n\tthis.highPassUniforms = THREE.UniformsUtils.clone( highPassShader.uniforms );\r\n\r\n\tthis.highPassUniforms[ \"luminosityThreshold\" ].value = threshold;\r\n\tthis.highPassUniforms[ \"smoothWidth\" ].value = 0.01;\r\n\r\n\tthis.materialHighPassFilter = new THREE.ShaderMaterial( {\r\n\t\tuniforms: this.highPassUniforms,\r\n\t\tvertexShader: highPassShader.vertexShader,\r\n\t\tfragmentShader: highPassShader.fragmentShader,\r\n\t\tdefines: {}\r\n\t} );\r\n\r\n\t// Gaussian Blur Materials\r\n\tthis.separableBlurMaterials = [];\r\n\tvar kernelSizeArray = [ 3, 5, 7, 9, 11 ];\r\n\tvar resx = Math.round( this.resolution.x / 2 );\r\n\tvar resy = Math.round( this.resolution.y / 2 );\r\n\r\n\tfor ( var i = 0; i < this.nMips; i ++ ) {\r\n\r\n\t\tthis.separableBlurMaterials.push( this.getSeperableBlurMaterial( kernelSizeArray[ i ] ) );\r\n\r\n\t\tthis.separableBlurMaterials[ i ].uniforms[ \"texSize\" ].value = new THREE.Vector2( resx, resy );\r\n\r\n\t\tresx = Math.round( resx / 2 );\r\n\r\n\t\tresy = Math.round( resy / 2 );\r\n\r\n\t}\r\n\r\n\t// Composite material\r\n\tthis.compositeMaterial = this.getCompositeMaterial( this.nMips );\r\n\tthis.compositeMaterial.uniforms[ \"blurTexture1\" ].value = this.renderTargetsVertical[ 0 ].texture;\r\n\tthis.compositeMaterial.uniforms[ \"blurTexture2\" ].value = this.renderTargetsVertical[ 1 ].texture;\r\n\tthis.compositeMaterial.uniforms[ \"blurTexture3\" ].value = this.renderTargetsVertical[ 2 ].texture;\r\n\tthis.compositeMaterial.uniforms[ \"blurTexture4\" ].value = this.renderTargetsVertical[ 3 ].texture;\r\n\tthis.compositeMaterial.uniforms[ \"blurTexture5\" ].value = this.renderTargetsVertical[ 4 ].texture;\r\n\tthis.compositeMaterial.uniforms[ \"bloomStrength\" ].value = strength;\r\n\tthis.compositeMaterial.uniforms[ \"bloomRadius\" ].value = 0.1;\r\n\tthis.compositeMaterial.needsUpdate = true;\r\n\r\n\tvar bloomFactors = [ 1.0, 0.8, 0.6, 0.4, 0.2 ];\r\n\tthis.compositeMaterial.uniforms[ \"bloomFactors\" ].value = bloomFactors;\r\n\tthis.bloomTintColors = [ new THREE.Vector3( 1, 1, 1 ), new THREE.Vector3( 1, 1, 1 ), new THREE.Vector3( 1, 1, 1 ),\r\n\t\t\t\t\t\t\t new THREE.Vector3( 1, 1, 1 ), new THREE.Vector3( 1, 1, 1 ) ];\r\n\tthis.compositeMaterial.uniforms[ \"bloomTintColors\" ].value = this.bloomTintColors;\r\n\r\n\t// copy material\r\n\tif ( THREE.CopyShader === undefined ) {\r\n\r\n\t\tconsole.error( \"THREE.UnrealBloomPass relies on THREE.CopyShader\" );\r\n\r\n\t}\r\n\r\n\tvar copyShader = THREE.CopyShader;\r\n\r\n\tthis.copyUniforms = THREE.UniformsUtils.clone( copyShader.uniforms );\r\n\tthis.copyUniforms[ \"opacity\" ].value = 1.0;\r\n\r\n\tthis.materialCopy = new THREE.ShaderMaterial( {\r\n\t\tuniforms: this.copyUniforms,\r\n\t\tvertexShader: copyShader.vertexShader,\r\n\t\tfragmentShader: copyShader.fragmentShader,\r\n\t\tblending: THREE.AdditiveBlending,\r\n\t\tdepthTest: false,\r\n\t\tdepthWrite: false,\r\n\t\ttransparent: true\r\n\t} );\r\n\r\n\tthis.enabled = true;\r\n\tthis.needsSwap = false;\r\n\r\n\tthis.oldClearColor = new THREE.Color();\r\n\tthis.oldClearAlpha = 1;\r\n\r\n\tthis.basic = new THREE.MeshBasicMaterial();\r\n\r\n\tthis.fsQuad = new THREE.Pass.FullScreenQuad( null );\r\n\r\n};\r\n\r\nTHREE.UnrealBloomPass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\r\n\r\n\tconstructor: THREE.UnrealBloomPass,\r\n\r\n\tdispose: function () {\r\n\r\n\t\tfor ( var i = 0; i < this.renderTargetsHorizontal.length; i ++ ) {\r\n\r\n\t\t\tthis.renderTargetsHorizontal[ i ].dispose();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < this.renderTargetsVertical.length; i ++ ) {\r\n\r\n\t\t\tthis.renderTargetsVertical[ i ].dispose();\r\n\r\n\t\t}\r\n\r\n\t\tthis.renderTargetBright.dispose();\r\n\r\n\t},\r\n\r\n\tsetSize: function ( width, height ) {\r\n\r\n\t\tvar resx = Math.round( width / 2 );\r\n\t\tvar resy = Math.round( height / 2 );\r\n\r\n\t\tthis.renderTargetBright.setSize( resx, resy );\r\n\r\n\t\tfor ( var i = 0; i < this.nMips; i ++ ) {\r\n\r\n\t\t\tthis.renderTargetsHorizontal[ i ].setSize( resx, resy );\r\n\t\t\tthis.renderTargetsVertical[ i ].setSize( resx, resy );\r\n\r\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"texSize\" ].value = new THREE.Vector2( resx, resy );\r\n\r\n\t\t\tresx = Math.round( resx / 2 );\r\n\t\t\tresy = Math.round( resy / 2 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\trender: function ( renderer, writeBuffer, readBuffer, deltaTime, maskActive ) {\r\n\r\n\t\tthis.oldClearColor.copy( renderer.getClearColor() );\r\n\t\tthis.oldClearAlpha = renderer.getClearAlpha();\r\n\t\tvar oldAutoClear = renderer.autoClear;\r\n\t\trenderer.autoClear = false;\r\n\r\n\t\trenderer.setClearColor( this.clearColor, 0 );\r\n\r\n\t\tif ( maskActive ) renderer.context.disable( renderer.context.STENCIL_TEST );\r\n\r\n\t\t// Render input to screen\r\n\r\n\t\tif ( this.renderToScreen ) {\r\n\r\n\t\t\tthis.fsQuad.material = this.basic;\r\n\t\t\tthis.basic.map = readBuffer.texture;\r\n\r\n\t\t\trenderer.setRenderTarget( null );\r\n\t\t\trenderer.clear();\r\n\t\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t}\r\n\r\n\t\t// 1. Extract Bright Areas\r\n\r\n\t\tthis.highPassUniforms[ \"tDiffuse\" ].value = readBuffer.texture;\r\n\t\tthis.highPassUniforms[ \"luminosityThreshold\" ].value = this.threshold;\r\n\t\tthis.fsQuad.material = this.materialHighPassFilter;\r\n\r\n\t\trenderer.setRenderTarget( this.renderTargetBright );\r\n\t\trenderer.clear();\r\n\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t// 2. Blur All the mips progressively\r\n\r\n\t\tvar inputRenderTarget = this.renderTargetBright;\r\n\r\n\t\tfor ( var i = 0; i < this.nMips; i ++ ) {\r\n\r\n\t\t\tthis.fsQuad.material = this.separableBlurMaterials[ i ];\r\n\r\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"colorTexture\" ].value = inputRenderTarget.texture;\r\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"direction\" ].value = THREE.UnrealBloomPass.BlurDirectionX;\r\n\t\t\trenderer.setRenderTarget( this.renderTargetsHorizontal[ i ] );\r\n\t\t\trenderer.clear();\r\n\t\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"colorTexture\" ].value = this.renderTargetsHorizontal[ i ].texture;\r\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"direction\" ].value = THREE.UnrealBloomPass.BlurDirectionY;\r\n\t\t\trenderer.setRenderTarget( this.renderTargetsVertical[ i ] );\r\n\t\t\trenderer.clear();\r\n\t\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t\tinputRenderTarget = this.renderTargetsVertical[ i ];\r\n\r\n\t\t}\r\n\r\n\t\t// Composite All the mips\r\n\r\n\t\tthis.fsQuad.material = this.compositeMaterial;\r\n\t\tthis.compositeMaterial.uniforms[ \"bloomStrength\" ].value = this.strength;\r\n\t\tthis.compositeMaterial.uniforms[ \"bloomRadius\" ].value = this.radius;\r\n\t\tthis.compositeMaterial.uniforms[ \"bloomTintColors\" ].value = this.bloomTintColors;\r\n\r\n\t\trenderer.setRenderTarget( this.renderTargetsHorizontal[ 0 ] );\r\n\t\trenderer.clear();\r\n\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t// Blend it additively over the input texture\r\n\r\n\t\tthis.fsQuad.material = this.materialCopy;\r\n\t\tthis.copyUniforms[ \"tDiffuse\" ].value = this.renderTargetsHorizontal[ 0 ].texture;\r\n\r\n\t\tif ( maskActive ) renderer.context.enable( renderer.context.STENCIL_TEST );\r\n\r\n\r\n\t\tif ( this.renderToScreen ) {\r\n\r\n\t\t\trenderer.setRenderTarget( null );\r\n\t\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer.setRenderTarget( readBuffer );\r\n\t\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t}\r\n\r\n\t\t// Restore renderer settings\r\n\r\n\t\trenderer.setClearColor( this.oldClearColor, this.oldClearAlpha );\r\n\t\trenderer.autoClear = oldAutoClear;\r\n\r\n\t},\r\n\r\n\tgetSeperableBlurMaterial: function ( kernelRadius ) {\r\n\r\n\t\treturn new THREE.ShaderMaterial( {\r\n\r\n\t\t\tdefines: {\r\n\t\t\t\t\"KERNEL_RADIUS\": kernelRadius,\r\n\t\t\t\t\"SIGMA\": kernelRadius\r\n\t\t\t},\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\t\"colorTexture\": { value: null },\r\n\t\t\t\t\"texSize\": { value: new THREE.Vector2( 0.5, 0.5 ) },\r\n\t\t\t\t\"direction\": { value: new THREE.Vector2( 0.5, 0.5 ) }\r\n\t\t\t},\r\n\r\n\t\t\tvertexShader:\r\n\t\t\t\t\"varying vec2 vUv;\\n\\\r\n\t\t\t\tvoid main() {\\n\\\r\n\t\t\t\t\tvUv = uv;\\n\\\r\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\r\n\t\t\t\t}\",\r\n\r\n\t\t\tfragmentShader:\r\n\t\t\t\t\"#include <common>\\\r\n\t\t\t\tvarying vec2 vUv;\\n\\\r\n\t\t\t\tuniform sampler2D colorTexture;\\n\\\r\n\t\t\t\tuniform vec2 texSize;\\\r\n\t\t\t\tuniform vec2 direction;\\\r\n\t\t\t\t\\\r\n\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\\\r\n\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\\\r\n\t\t\t\t}\\\r\n\t\t\t\tvoid main() {\\n\\\r\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\\\r\n\t\t\t\t\tfloat fSigma = float(SIGMA);\\\r\n\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\\\r\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\\\r\n\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\\\r\n\t\t\t\t\t\tfloat x = float(i);\\\r\n\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\\\r\n\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\\\r\n\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\\\r\n\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\\\r\n\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\\\r\n\t\t\t\t\t\tweightSum += 2.0 * w;\\\r\n\t\t\t\t\t}\\\r\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\\n\\\r\n\t\t\t\t}\"\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tgetCompositeMaterial: function ( nMips ) {\r\n\r\n\t\treturn new THREE.ShaderMaterial( {\r\n\r\n\t\t\tdefines: {\r\n\t\t\t\t\"NUM_MIPS\": nMips\r\n\t\t\t},\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\t\"blurTexture1\": { value: null },\r\n\t\t\t\t\"blurTexture2\": { value: null },\r\n\t\t\t\t\"blurTexture3\": { value: null },\r\n\t\t\t\t\"blurTexture4\": { value: null },\r\n\t\t\t\t\"blurTexture5\": { value: null },\r\n\t\t\t\t\"dirtTexture\": { value: null },\r\n\t\t\t\t\"bloomStrength\": { value: 1.0 },\r\n\t\t\t\t\"bloomFactors\": { value: null },\r\n\t\t\t\t\"bloomTintColors\": { value: null },\r\n\t\t\t\t\"bloomRadius\": { value: 0.0 }\r\n\t\t\t},\r\n\r\n\t\t\tvertexShader:\r\n\t\t\t\t\"varying vec2 vUv;\\n\\\r\n\t\t\t\tvoid main() {\\n\\\r\n\t\t\t\t\tvUv = uv;\\n\\\r\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\r\n\t\t\t\t}\",\r\n\r\n\t\t\tfragmentShader:\r\n\t\t\t\t\"varying vec2 vUv;\\\r\n\t\t\t\tuniform sampler2D blurTexture1;\\\r\n\t\t\t\tuniform sampler2D blurTexture2;\\\r\n\t\t\t\tuniform sampler2D blurTexture3;\\\r\n\t\t\t\tuniform sampler2D blurTexture4;\\\r\n\t\t\t\tuniform sampler2D blurTexture5;\\\r\n\t\t\t\tuniform sampler2D dirtTexture;\\\r\n\t\t\t\tuniform float bloomStrength;\\\r\n\t\t\t\tuniform float bloomRadius;\\\r\n\t\t\t\tuniform float bloomFactors[NUM_MIPS];\\\r\n\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\\\r\n\t\t\t\t\\\r\n\t\t\t\tfloat lerpBloomFactor(const in float factor) { \\\r\n\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\\\r\n\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\\\r\n\t\t\t\t}\\\r\n\t\t\t\t\\\r\n\t\t\t\tvoid main() {\\\r\n\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \\\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \\\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \\\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \\\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\\\r\n\t\t\t\t}\"\r\n\t\t} );\r\n\r\n\t}\r\n\r\n} );\r\n\r\nTHREE.UnrealBloomPass.BlurDirectionX = new THREE.Vector2( 1.0, 0.0 );\r\nTHREE.UnrealBloomPass.BlurDirectionY = new THREE.Vector2( 0.0, 1.0 );\r\n"],"sourceRoot":""}