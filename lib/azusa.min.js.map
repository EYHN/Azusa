{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///external \"THREE\"","webpack:///./node_modules/events/events.js","webpack:///./src/lib/LuminosityHighPassShader.js","webpack:///./src/lib/CopyShader.js","webpack:///./src/lib/EffectComposer.js","webpack:///./src/lib/RenderPass.js","webpack:///./src/lib/ShaderPass.js","webpack:///./src/lib/UnrealBloomPass.js","webpack:///./src/util/randomRange.ts","webpack:///./src/Triangle.ts","webpack:///./src/util/range.ts","webpack:///./src/node.ts","webpack:///./src/audio.ts","webpack:///./src/lib/ExtendThree.ts","webpack:///./src/azusa.ts"],"names":["root","factory","exports","module","require","define","amd","a","i","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ReflectOwnKeys","R","Reflect","ReflectApply","apply","target","receiver","args","Function","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","Number","isNaN","EventEmitter","init","this","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","$getMaxListeners","that","_addListener","type","listener","prepend","events","existing","warning","TypeError","newListener","emit","unshift","push","length","warned","w","Error","String","emitter","count","console","warn","_onceWrap","state","fired","wrapFn","wrapped","arguments","removeListener","_listeners","unwrap","evlistener","arr","ret","Array","unwrapListeners","arrayClone","listenerCount","copy","set","arg","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","err","message","context","handler","len","listeners","addListener","on","prependListener","once","prependOnceListener","list","position","originalListener","shift","index","pop","spliceOne","off","removeAllListeners","keys","rawListeners","eventNames","THREE","LuminosityHighPassShader","shaderID","uniforms","tDiffuse","luminosityThreshold","smoothWidth","defaultColor","Color","defaultOpacity","vertexShader","join","fragmentShader","CopyShader","opacity","camera","geometry","FullScreenQuad","EffectComposer","renderer","renderTarget","parameters","minFilter","LinearFilter","magFilter","format","RGBAFormat","stencilBuffer","size","getSize","Vector2","_pixelRatio","getPixelRatio","_width","width","_height","height","WebGLRenderTarget","texture","renderTarget1","renderTarget2","clone","writeBuffer","readBuffer","renderToScreen","passes","ShaderPass","copyPass","clock","Clock","assign","swapBuffers","tmp","addPass","pass","getDrawingBufferSize","setSize","insertPass","splice","isLastEnabledPass","passIndex","enabled","render","deltaTime","getDelta","currentRenderTarget","getRenderTarget","maskActive","il","needsSwap","stencilFunc","NOTEQUAL","EQUAL","MaskPass","ClearMaskPass","setRenderTarget","reset","dispose","effectiveWidth","effectiveHeight","setPixelRatio","pixelRatio","Pass","clear","OrthographicCamera","PlaneBufferGeometry","material","_mesh","Mesh","RenderPass","scene","overrideMaterial","clearColor","clearAlpha","clearDepth","constructor","oldClearColor","oldClearAlpha","oldAutoClear","autoClear","getClearColor","getHex","getClearAlpha","setClearColor","autoClearColor","autoClearDepth","autoClearStencil","shader","textureID","ShaderMaterial","UniformsUtils","defines","fsQuad","UnrealBloomPass","resolution","strength","radius","threshold","x","y","pars","renderTargetsHorizontal","renderTargetsVertical","nMips","resx","Math","round","resy","renderTargetBright","generateMipmaps","renderTargetHorizonal","renderTargetVertical","highPassShader","highPassUniforms","materialHighPassFilter","separableBlurMaterials","kernelSizeArray","getSeperableBlurMaterial","compositeMaterial","getCompositeMaterial","needsUpdate","bloomTintColors","Vector3","copyShader","copyUniforms","materialCopy","blending","AdditiveBlending","depthTest","depthWrite","transparent","basic","MeshBasicMaterial","disable","STENCIL_TEST","map","inputRenderTarget","BlurDirectionX","BlurDirectionY","enable","kernelRadius","KERNEL_RADIUS","SIGMA","colorTexture","texSize","direction","NUM_MIPS","blurTexture1","blurTexture2","blurTexture3","blurTexture4","blurTexture5","dirtTexture","bloomStrength","bloomFactors","bloomRadius","randomRange","range","random","Triangle_Triangle","Triangle","center","angle","speed","rotateSpeed","lineMaterial","lineDistance","cb","rotate","id","panelOpacity","onDelete","distance","startShow","showDistance","panelMaterial","external_THREE_","panelGeometry","lineGeometry","vertices","_a","_b","faces","computeFaceNormals","computeVertexNormals","line","mesh","group","translateOnAxis","translate","add","rotateZ","updatePosition","cos","PI","sin","axis","delay","endHide","delete","endShow","startHide","transition","range_range","start","end","step","fromRight","max","ceil","result","node_node","node","baseRange","lastStrength","theStrength","targetRange","_range","newStrength","audio_Audio","_super","Audio","option","_this","sound","audioLoader","analyser","fftsize","frequencyBinCount","__extends","load","src","onLoad","buffer","onPrgress","xhr","_c","onError","setBuffer","setLoop","play","setVolume","volume","getFrequencyData","ExtendThree","__webpack_exports__","azusa_Azusa","Azusa","scale","Triangles","innerWidth","innerHeight","subdivisionSize","_d","cutFront","_e","cutEnd","WebGLRenderer","canvas","view","alpha","antialias","PerspectiveCamera","lookAt","Scene","composer","renderScene","bloomPass","audio","loadAudio","LineBasicMaterial","color","nodeCount","nodes","lineA","Line","BufferGeometry","addAttribute","renderGeometries","positionA","setDynamic","lineB","positionB","lines","lineGroup","loadLine","TriangleGroup","loadTriangle","resize","loadGui","params","projection","background","exposure","bloomThreshold","gui","dat","GUI","onChange","open","aspect","fov","updateProjectionMatrix","Group","forEach","setInterval","addTriangle","triangle","makeTriangle","filter","remove","res","BufferAttribute","Float32Array","updateGeometries","AttributeA_1","getAttribute","AttributeB_1","positions","Attribute","array","audioDate","Delta","cutAudioDate","slice","requestAnimationFrame"],"mappings":"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","file":"azusa.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"THREE\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"THREE\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"THREE\")) : factory(root[\"THREE\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","/**\n * @author bhouston / http://clara.io/\n *\n * Luminosity\n * http://en.wikipedia.org/wiki/Luminosity\n */\n\nTHREE.LuminosityHighPassShader = {\n\n\tshaderID: \"luminosityHighPass\",\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"luminosityThreshold\": { value: 1.0 },\n\t\t\"smoothWidth\": { value: 1.0 },\n\t\t\"defaultColor\": { value: new THREE.Color( 0x000000 ) },\n\t\t\"defaultOpacity\": { value: 0.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform vec3 defaultColor;\",\n\t\t\"uniform float defaultOpacity;\",\n\t\t\"uniform float luminosityThreshold;\",\n\t\t\"uniform float smoothWidth;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\n\t\t\t\"vec3 luma = vec3( 0.299, 0.587, 0.114 );\",\n\n\t\t\t\"float v = dot( texel.xyz, luma );\",\n\n\t\t\t\"vec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );\",\n\n\t\t\t\"float alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\",\n\n\t\t\t\"gl_FragColor = mix( outputColor, texel, alpha );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\")\n\n};\n","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Full-screen textured quad shader\n */\n\nTHREE.CopyShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"opacity\":  { value: 1.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"uniform float opacity;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\t\"gl_FragColor = opacity * texel;\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" )\n\n};\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.EffectComposer = function ( renderer, renderTarget ) {\n\n\tthis.renderer = renderer;\n\n\tif ( renderTarget === undefined ) {\n\n\t\tvar parameters = {\n\t\t\tminFilter: THREE.LinearFilter,\n\t\t\tmagFilter: THREE.LinearFilter,\n\t\t\tformat: THREE.RGBAFormat,\n\t\t\tstencilBuffer: false\n\t\t};\n\n\t\tvar size = renderer.getSize( new THREE.Vector2() );\n\t\tthis._pixelRatio = renderer.getPixelRatio();\n\t\tthis._width = size.width;\n\t\tthis._height = size.height;\n\n\t\trenderTarget = new THREE.WebGLRenderTarget( this._width * this._pixelRatio, this._height * this._pixelRatio, parameters );\n\t\trenderTarget.texture.name = 'EffectComposer.rt1';\n\n\t} else {\n\n\t\tthis._pixelRatio = 1;\n\t\tthis._width = renderTarget.width;\n\t\tthis._height = renderTarget.height;\n\n\t}\n\n\tthis.renderTarget1 = renderTarget;\n\tthis.renderTarget2 = renderTarget.clone();\n\tthis.renderTarget2.texture.name = 'EffectComposer.rt2';\n\n\tthis.writeBuffer = this.renderTarget1;\n\tthis.readBuffer = this.renderTarget2;\n\n\tthis.renderToScreen = true;\n\n\tthis.passes = [];\n\n\t// dependencies\n\n\tif ( THREE.CopyShader === undefined ) {\n\n\t\tconsole.error( 'THREE.EffectComposer relies on THREE.CopyShader' );\n\n\t}\n\n\tif ( THREE.ShaderPass === undefined ) {\n\n\t\tconsole.error( 'THREE.EffectComposer relies on THREE.ShaderPass' );\n\n\t}\n\n\tthis.copyPass = new THREE.ShaderPass( THREE.CopyShader );\n\n\tthis.clock = new THREE.Clock();\n\n};\n\nObject.assign( THREE.EffectComposer.prototype, {\n\n\tswapBuffers: function () {\n\n\t\tvar tmp = this.readBuffer;\n\t\tthis.readBuffer = this.writeBuffer;\n\t\tthis.writeBuffer = tmp;\n\n\t},\n\n\taddPass: function ( pass ) {\n\n\t\tthis.passes.push( pass );\n\n\t\tvar size = this.renderer.getDrawingBufferSize( new THREE.Vector2() );\n\t\tpass.setSize( size.width, size.height );\n\n\t},\n\n\tinsertPass: function ( pass, index ) {\n\n\t\tthis.passes.splice( index, 0, pass );\n\n\t},\n\n\tisLastEnabledPass: function ( passIndex ) {\n\n\t\tfor ( var i = passIndex + 1; i < this.passes.length; i ++ ) {\n\n\t\t\tif ( this.passes[ i ].enabled ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\trender: function ( deltaTime ) {\n\n\t\t// deltaTime value is in seconds\n\n\t\tif ( deltaTime === undefined ) {\n\n\t\t\tdeltaTime = this.clock.getDelta();\n\n\t\t}\n\n\t\tvar currentRenderTarget = this.renderer.getRenderTarget();\n\n\t\tvar maskActive = false;\n\n\t\tvar pass, i, il = this.passes.length;\n\n\t\tfor ( i = 0; i < il; i ++ ) {\n\n\t\t\tpass = this.passes[ i ];\n\n\t\t\tif ( pass.enabled === false ) continue;\n\n\t\t\tpass.renderToScreen = ( this.renderToScreen && this.isLastEnabledPass( i ) );\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime, maskActive );\n\n\t\t\tif ( pass.needsSwap ) {\n\n\t\t\t\tif ( maskActive ) {\n\n\t\t\t\t\tvar context = this.renderer.context;\n\n\t\t\t\t\tcontext.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime );\n\n\t\t\t\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\n\t\t\t\t}\n\n\t\t\t\tthis.swapBuffers();\n\n\t\t\t}\n\n\t\t\tif ( THREE.MaskPass !== undefined ) {\n\n\t\t\t\tif ( pass instanceof THREE.MaskPass ) {\n\n\t\t\t\t\tmaskActive = true;\n\n\t\t\t\t} else if ( pass instanceof THREE.ClearMaskPass ) {\n\n\t\t\t\t\tmaskActive = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.renderer.setRenderTarget( currentRenderTarget );\n\n\t},\n\n\treset: function ( renderTarget ) {\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\tvar size = this.renderer.getSize( new THREE.Vector2() );\n\t\t\tthis._pixelRatio = this.renderer.getPixelRatio();\n\t\t\tthis._width = size.width;\n\t\t\tthis._height = size.height;\n\n\t\t\trenderTarget = this.renderTarget1.clone();\n\t\t\trenderTarget.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t\t}\n\n\t\tthis.renderTarget1.dispose();\n\t\tthis.renderTarget2.dispose();\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\n\t\tvar effectiveWidth = this._width * this._pixelRatio;\n\t\tvar effectiveHeight = this._height * this._pixelRatio;\n\n\t\tthis.renderTarget1.setSize( effectiveWidth, effectiveHeight );\n\t\tthis.renderTarget2.setSize( effectiveWidth, effectiveHeight );\n\n\t\tfor ( var i = 0; i < this.passes.length; i ++ ) {\n\n\t\t\tthis.passes[ i ].setSize( effectiveWidth, effectiveHeight );\n\n\t\t}\n\n\t},\n\n\tsetPixelRatio: function ( pixelRatio ) {\n\n\t\tthis._pixelRatio = pixelRatio;\n\n\t\tthis.setSize( this._width, this._height );\n\n\t}\n\n} );\n\n\nTHREE.Pass = function () {\n\n\t// if set to true, the pass is processed by the composer\n\tthis.enabled = true;\n\n\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\tthis.needsSwap = true;\n\n\t// if set to true, the pass clears its buffer before rendering\n\tthis.clear = false;\n\n\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n\tthis.renderToScreen = false;\n\n};\n\nObject.assign( THREE.Pass.prototype, {\n\n\tsetSize: function ( /* width, height */ ) {},\n\n\trender: function ( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n} );\n\n// Helper for passes that need to fill the viewport with a single quad.\nTHREE.Pass.FullScreenQuad = ( function () {\n\n\tvar camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\tvar geometry = new THREE.PlaneBufferGeometry( 2, 2 );\n\n\tvar FullScreenQuad = function ( material ) {\n\n\t\tthis._mesh = new THREE.Mesh( geometry, material );\n\n\t};\n\n\tObject.defineProperty( FullScreenQuad.prototype, 'material', {\n\n\t\tget: function () {\n\n\t\t\treturn this._mesh.material;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._mesh.material = value;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( FullScreenQuad.prototype, {\n\n\t\trender: function ( renderer ) {\n\n\t\t\trenderer.render( this._mesh, camera );\n\n\t\t}\n\n\t} );\n\n\treturn FullScreenQuad;\n\n} )();\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\tTHREE.Pass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.overrideMaterial = overrideMaterial;\n\n\tthis.clearColor = clearColor;\n\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 0;\n\n\tthis.clear = true;\n\tthis.clearDepth = false;\n\tthis.needsSwap = false;\n\n};\n\nTHREE.RenderPass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\n\n\tconstructor: THREE.RenderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\tvar oldClearColor, oldClearAlpha;\n\n\t\tif ( this.clearColor ) {\n\n\t\t\toldClearColor = renderer.getClearColor().getHex();\n\t\t\toldClearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t}\n\n\t\tif ( this.clearDepth ) {\n\n\t\t\trenderer.clearDepth();\n\n\t\t}\n\n\t\trenderer.setRenderTarget( this.renderToScreen ? null : readBuffer );\n\n\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\trenderer.render( this.scene, this.camera );\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.setClearColor( oldClearColor, oldClearAlpha );\n\n\t\t}\n\n\t\tthis.scene.overrideMaterial = null;\n\t\trenderer.autoClear = oldAutoClear;\n\n\t}\n\n} );\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.ShaderPass = function ( shader, textureID ) {\n\n\tTHREE.Pass.call( this );\n\n\tthis.textureID = ( textureID !== undefined ) ? textureID : \"tDiffuse\";\n\n\tif ( shader instanceof THREE.ShaderMaterial ) {\n\n\t\tthis.uniforms = shader.uniforms;\n\n\t\tthis.material = shader;\n\n\t} else if ( shader ) {\n\n\t\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\t\tthis.material = new THREE.ShaderMaterial( {\n\n\t\t\tdefines: Object.assign( {}, shader.defines ),\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t} );\n\n\t}\n\n\tthis.fsQuad = new THREE.Pass.FullScreenQuad( this.material );\n\n};\n\nTHREE.ShaderPass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\n\n\tconstructor: THREE.ShaderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\n\n\t\t}\n\n\t\tthis.fsQuad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t}\n\n} );\n","/**\n * @author spidersharma / http://eduperiment.com/\n *\n * Inspired from Unreal Engine\n * https://docs.unrealengine.com/latest/INT/Engine/Rendering/PostProcessEffects/Bloom/\n */\n\nTHREE.UnrealBloomPass = function ( resolution, strength, radius, threshold ) {\n\n\tTHREE.Pass.call( this );\n\n\tthis.strength = ( strength !== undefined ) ? strength : 1;\n\tthis.radius = radius;\n\tthis.threshold = threshold;\n\tthis.resolution = ( resolution !== undefined ) ? new THREE.Vector2( resolution.x, resolution.y ) : new THREE.Vector2( 256, 256 );\n\n\t// create color only once here, reuse it later inside the render function\n\tthis.clearColor = new THREE.Color( 0, 0, 0 );\n\n\t// render targets\n\tvar pars = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBAFormat };\n\tthis.renderTargetsHorizontal = [];\n\tthis.renderTargetsVertical = [];\n\tthis.nMips = 5;\n\tvar resx = Math.round( this.resolution.x / 2 );\n\tvar resy = Math.round( this.resolution.y / 2 );\n\n\tthis.renderTargetBright = new THREE.WebGLRenderTarget( resx, resy, pars );\n\tthis.renderTargetBright.texture.name = \"UnrealBloomPass.bright\";\n\tthis.renderTargetBright.texture.generateMipmaps = false;\n\n\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\tvar renderTargetHorizonal = new THREE.WebGLRenderTarget( resx, resy, pars );\n\n\t\trenderTargetHorizonal.texture.name = \"UnrealBloomPass.h\" + i;\n\t\trenderTargetHorizonal.texture.generateMipmaps = false;\n\n\t\tthis.renderTargetsHorizontal.push( renderTargetHorizonal );\n\n\t\tvar renderTargetVertical = new THREE.WebGLRenderTarget( resx, resy, pars );\n\n\t\trenderTargetVertical.texture.name = \"UnrealBloomPass.v\" + i;\n\t\trenderTargetVertical.texture.generateMipmaps = false;\n\n\t\tthis.renderTargetsVertical.push( renderTargetVertical );\n\n\t\tresx = Math.round( resx / 2 );\n\n\t\tresy = Math.round( resy / 2 );\n\n\t}\n\n\t// luminosity high pass material\n\n\tif ( THREE.LuminosityHighPassShader === undefined )\n\t\tconsole.error( \"THREE.UnrealBloomPass relies on THREE.LuminosityHighPassShader\" );\n\n\tvar highPassShader = THREE.LuminosityHighPassShader;\n\tthis.highPassUniforms = THREE.UniformsUtils.clone( highPassShader.uniforms );\n\n\tthis.highPassUniforms[ \"luminosityThreshold\" ].value = threshold;\n\tthis.highPassUniforms[ \"smoothWidth\" ].value = 0.01;\n\n\tthis.materialHighPassFilter = new THREE.ShaderMaterial( {\n\t\tuniforms: this.highPassUniforms,\n\t\tvertexShader: highPassShader.vertexShader,\n\t\tfragmentShader: highPassShader.fragmentShader,\n\t\tdefines: {}\n\t} );\n\n\t// Gaussian Blur Materials\n\tthis.separableBlurMaterials = [];\n\tvar kernelSizeArray = [ 3, 5, 7, 9, 11 ];\n\tvar resx = Math.round( this.resolution.x / 2 );\n\tvar resy = Math.round( this.resolution.y / 2 );\n\n\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\tthis.separableBlurMaterials.push( this.getSeperableBlurMaterial( kernelSizeArray[ i ] ) );\n\n\t\tthis.separableBlurMaterials[ i ].uniforms[ \"texSize\" ].value = new THREE.Vector2( resx, resy );\n\n\t\tresx = Math.round( resx / 2 );\n\n\t\tresy = Math.round( resy / 2 );\n\n\t}\n\n\t// Composite material\n\tthis.compositeMaterial = this.getCompositeMaterial( this.nMips );\n\tthis.compositeMaterial.uniforms[ \"blurTexture1\" ].value = this.renderTargetsVertical[ 0 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture2\" ].value = this.renderTargetsVertical[ 1 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture3\" ].value = this.renderTargetsVertical[ 2 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture4\" ].value = this.renderTargetsVertical[ 3 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture5\" ].value = this.renderTargetsVertical[ 4 ].texture;\n\tthis.compositeMaterial.uniforms[ \"bloomStrength\" ].value = strength;\n\tthis.compositeMaterial.uniforms[ \"bloomRadius\" ].value = 0.1;\n\tthis.compositeMaterial.needsUpdate = true;\n\n\tvar bloomFactors = [ 1.0, 0.8, 0.6, 0.4, 0.2 ];\n\tthis.compositeMaterial.uniforms[ \"bloomFactors\" ].value = bloomFactors;\n\tthis.bloomTintColors = [ new THREE.Vector3( 1, 1, 1 ), new THREE.Vector3( 1, 1, 1 ), new THREE.Vector3( 1, 1, 1 ),\n\t\t\t\t\t\t\t new THREE.Vector3( 1, 1, 1 ), new THREE.Vector3( 1, 1, 1 ) ];\n\tthis.compositeMaterial.uniforms[ \"bloomTintColors\" ].value = this.bloomTintColors;\n\n\t// copy material\n\tif ( THREE.CopyShader === undefined ) {\n\n\t\tconsole.error( \"THREE.UnrealBloomPass relies on THREE.CopyShader\" );\n\n\t}\n\n\tvar copyShader = THREE.CopyShader;\n\n\tthis.copyUniforms = THREE.UniformsUtils.clone( copyShader.uniforms );\n\tthis.copyUniforms[ \"opacity\" ].value = 1.0;\n\n\tthis.materialCopy = new THREE.ShaderMaterial( {\n\t\tuniforms: this.copyUniforms,\n\t\tvertexShader: copyShader.vertexShader,\n\t\tfragmentShader: copyShader.fragmentShader,\n\t\tblending: THREE.AdditiveBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false,\n\t\ttransparent: true\n\t} );\n\n\tthis.enabled = true;\n\tthis.needsSwap = false;\n\n\tthis.oldClearColor = new THREE.Color();\n\tthis.oldClearAlpha = 1;\n\n\tthis.basic = new THREE.MeshBasicMaterial();\n\n\tthis.fsQuad = new THREE.Pass.FullScreenQuad( null );\n\n};\n\nTHREE.UnrealBloomPass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\n\n\tconstructor: THREE.UnrealBloomPass,\n\n\tdispose: function () {\n\n\t\tfor ( var i = 0; i < this.renderTargetsHorizontal.length; i ++ ) {\n\n\t\t\tthis.renderTargetsHorizontal[ i ].dispose();\n\n\t\t}\n\n\t\tfor ( var i = 0; i < this.renderTargetsVertical.length; i ++ ) {\n\n\t\t\tthis.renderTargetsVertical[ i ].dispose();\n\n\t\t}\n\n\t\tthis.renderTargetBright.dispose();\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tvar resx = Math.round( width / 2 );\n\t\tvar resy = Math.round( height / 2 );\n\n\t\tthis.renderTargetBright.setSize( resx, resy );\n\n\t\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\t\tthis.renderTargetsHorizontal[ i ].setSize( resx, resy );\n\t\t\tthis.renderTargetsVertical[ i ].setSize( resx, resy );\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"texSize\" ].value = new THREE.Vector2( resx, resy );\n\n\t\t\tresx = Math.round( resx / 2 );\n\t\t\tresy = Math.round( resy / 2 );\n\n\t\t}\n\n\t},\n\n\trender: function ( renderer, writeBuffer, readBuffer, deltaTime, maskActive ) {\n\n\t\tthis.oldClearColor.copy( renderer.getClearColor() );\n\t\tthis.oldClearAlpha = renderer.getClearAlpha();\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\trenderer.setClearColor( this.clearColor, 0 );\n\n\t\tif ( maskActive ) renderer.context.disable( renderer.context.STENCIL_TEST );\n\n\t\t// Render input to screen\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\tthis.fsQuad.material = this.basic;\n\t\t\tthis.basic.map = readBuffer.texture;\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t\t// 1. Extract Bright Areas\n\n\t\tthis.highPassUniforms[ \"tDiffuse\" ].value = readBuffer.texture;\n\t\tthis.highPassUniforms[ \"luminosityThreshold\" ].value = this.threshold;\n\t\tthis.fsQuad.material = this.materialHighPassFilter;\n\n\t\trenderer.setRenderTarget( this.renderTargetBright );\n\t\trenderer.clear();\n\t\tthis.fsQuad.render( renderer );\n\n\t\t// 2. Blur All the mips progressively\n\n\t\tvar inputRenderTarget = this.renderTargetBright;\n\n\t\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\t\tthis.fsQuad.material = this.separableBlurMaterials[ i ];\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"colorTexture\" ].value = inputRenderTarget.texture;\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"direction\" ].value = THREE.UnrealBloomPass.BlurDirectionX;\n\t\t\trenderer.setRenderTarget( this.renderTargetsHorizontal[ i ] );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"colorTexture\" ].value = this.renderTargetsHorizontal[ i ].texture;\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"direction\" ].value = THREE.UnrealBloomPass.BlurDirectionY;\n\t\t\trenderer.setRenderTarget( this.renderTargetsVertical[ i ] );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t\tinputRenderTarget = this.renderTargetsVertical[ i ];\n\n\t\t}\n\n\t\t// Composite All the mips\n\n\t\tthis.fsQuad.material = this.compositeMaterial;\n\t\tthis.compositeMaterial.uniforms[ \"bloomStrength\" ].value = this.strength;\n\t\tthis.compositeMaterial.uniforms[ \"bloomRadius\" ].value = this.radius;\n\t\tthis.compositeMaterial.uniforms[ \"bloomTintColors\" ].value = this.bloomTintColors;\n\n\t\trenderer.setRenderTarget( this.renderTargetsHorizontal[ 0 ] );\n\t\trenderer.clear();\n\t\tthis.fsQuad.render( renderer );\n\n\t\t// Blend it additively over the input texture\n\n\t\tthis.fsQuad.material = this.materialCopy;\n\t\tthis.copyUniforms[ \"tDiffuse\" ].value = this.renderTargetsHorizontal[ 0 ].texture;\n\n\t\tif ( maskActive ) renderer.context.enable( renderer.context.STENCIL_TEST );\n\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( readBuffer );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t\t// Restore renderer settings\n\n\t\trenderer.setClearColor( this.oldClearColor, this.oldClearAlpha );\n\t\trenderer.autoClear = oldAutoClear;\n\n\t},\n\n\tgetSeperableBlurMaterial: function ( kernelRadius ) {\n\n\t\treturn new THREE.ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\t\"KERNEL_RADIUS\": kernelRadius,\n\t\t\t\t\"SIGMA\": kernelRadius\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t\"colorTexture\": { value: null },\n\t\t\t\t\"texSize\": { value: new THREE.Vector2( 0.5, 0.5 ) },\n\t\t\t\t\"direction\": { value: new THREE.Vector2( 0.5, 0.5 ) }\n\t\t\t},\n\n\t\t\tvertexShader:\n\t\t\t\t\"varying vec2 vUv;\\n\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvUv = uv;\\n\\\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n\t\t\t\t}\",\n\n\t\t\tfragmentShader:\n\t\t\t\t\"#include <common>\\\n\t\t\t\tvarying vec2 vUv;\\n\\\n\t\t\t\tuniform sampler2D colorTexture;\\n\\\n\t\t\t\tuniform vec2 texSize;\\\n\t\t\t\tuniform vec2 direction;\\\n\t\t\t\t\\\n\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\\\n\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\\\n\t\t\t\t}\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\\\n\t\t\t\t\tfloat fSigma = float(SIGMA);\\\n\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\\\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\\\n\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\\\n\t\t\t\t\t\tfloat x = float(i);\\\n\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\\\n\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\\\n\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\\\n\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\\\n\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\\\n\t\t\t\t\t\tweightSum += 2.0 * w;\\\n\t\t\t\t\t}\\\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\\n\\\n\t\t\t\t}\"\n\t\t} );\n\n\t},\n\n\tgetCompositeMaterial: function ( nMips ) {\n\n\t\treturn new THREE.ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\t\"NUM_MIPS\": nMips\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t\"blurTexture1\": { value: null },\n\t\t\t\t\"blurTexture2\": { value: null },\n\t\t\t\t\"blurTexture3\": { value: null },\n\t\t\t\t\"blurTexture4\": { value: null },\n\t\t\t\t\"blurTexture5\": { value: null },\n\t\t\t\t\"dirtTexture\": { value: null },\n\t\t\t\t\"bloomStrength\": { value: 1.0 },\n\t\t\t\t\"bloomFactors\": { value: null },\n\t\t\t\t\"bloomTintColors\": { value: null },\n\t\t\t\t\"bloomRadius\": { value: 0.0 }\n\t\t\t},\n\n\t\t\tvertexShader:\n\t\t\t\t\"varying vec2 vUv;\\n\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvUv = uv;\\n\\\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n\t\t\t\t}\",\n\n\t\t\tfragmentShader:\n\t\t\t\t\"varying vec2 vUv;\\\n\t\t\t\tuniform sampler2D blurTexture1;\\\n\t\t\t\tuniform sampler2D blurTexture2;\\\n\t\t\t\tuniform sampler2D blurTexture3;\\\n\t\t\t\tuniform sampler2D blurTexture4;\\\n\t\t\t\tuniform sampler2D blurTexture5;\\\n\t\t\t\tuniform sampler2D dirtTexture;\\\n\t\t\t\tuniform float bloomStrength;\\\n\t\t\t\tuniform float bloomRadius;\\\n\t\t\t\tuniform float bloomFactors[NUM_MIPS];\\\n\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\\\n\t\t\t\t\\\n\t\t\t\tfloat lerpBloomFactor(const in float factor) { \\\n\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\\\n\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\\\n\t\t\t\t}\\\n\t\t\t\t\\\n\t\t\t\tvoid main() {\\\n\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\\\n\t\t\t\t}\"\n\t\t} );\n\n\t}\n\n} );\n\nTHREE.UnrealBloomPass.BlurDirectionX = new THREE.Vector2( 1.0, 0.0 );\nTHREE.UnrealBloomPass.BlurDirectionY = new THREE.Vector2( 0.0, 1.0 );\n","export function randomRange(a: number, range: number) {\n  return a + (Math.random() - 0.5) * range;\n}\n","import { randomRange } from './util/randomRange';\nimport * as THREE from 'three';\n\nexport interface ILineDistanceOption {\n  startShow: number;\n  endShow: number;\n  startHide: number;\n  endHide: number;\n}\n\nexport class Triangle {\n  public rotate: number = Math.random() * 360;\n  public id: number = Math.random();\n  public distance: number;\n  public rotateSpeed: number;\n  public angle: number;\n  // public pointA: THREE.Vector3;\n  // public pointB: THREE.Vector3;\n  // public pointC: THREE.Vector3;\n  public speed: number;\n  public center: THREE.Vector3;\n  public mesh: THREE.Mesh;\n  public showDistance: ILineDistanceOption;\n  public panelMaterial: THREE.MeshBasicMaterial;\n  public lineMaterial: THREE.LineBasicMaterial;\n  private panelOpacity: number = 0.1;\n  public line: THREE.Line;\n  public group: THREE.Group;\n  private onDelete: (t: Triangle) => void;\n\n  constructor(size: number, center: THREE.Vector3, angle: number, speed: number, rotateSpeed: number, material: THREE.MeshBasicMaterial, lineMaterial: THREE.LineBasicMaterial, lineDistance: ILineDistanceOption, cb: (t: Triangle) => void) {\n    this.rotateSpeed = rotateSpeed;\n    this.angle = angle;\n    this.speed = speed;\n    this.center = center;\n    this.onDelete = cb;\n    this.distance = lineDistance.startShow;\n    this.showDistance = lineDistance;\n    this.panelMaterial = new THREE.MeshBasicMaterial().copy(material)\n    this.panelMaterial.transparent = true;\n    this.lineMaterial = new THREE.LineBasicMaterial().copy(lineMaterial)\n    this.lineMaterial.transparent = true;\n    const panelGeometry = new THREE.Geometry();\n    const lineGeometry = new THREE.Geometry();\n\n    const vertices = [\n      new THREE.Vector3(randomRange(size, size / 2), randomRange(size, size / 2), 0),\n      new THREE.Vector3(randomRange(size, size / 2) * -1, randomRange(size, size / 2), 0),\n      new THREE.Vector3(randomRange(size, size / 2) * -1, randomRange(size, size / 2) * -1, 0)\n    ]\n\n    panelGeometry.vertices.push(\n      ...vertices\n    )\n\n    lineGeometry.vertices.push(...[...vertices, vertices[0]]);\n\n    panelGeometry.faces.push(new THREE.Face3(0, 1, 2));\n    panelGeometry.computeFaceNormals();\n    panelGeometry.computeVertexNormals();\n\n    this.line = new THREE.Line(lineGeometry, this.lineMaterial)\n    this.mesh = new THREE.Mesh(panelGeometry, this.panelMaterial);\n    this.group = new THREE.Group();\n    this.translateOnAxis(this.translate(this.distance), 1);\n    this.group.add(this.line);\n    this.group.add(this.mesh);\n    this.rotateZ(this.rotate);\n    this.updatePosition(0);\n  }\n\n  public rotateZ(angle: number) {\n    this.mesh.geometry.rotateZ(angle);\n    this.line.geometry.rotateZ(angle);\n  }\n\n  public translate(distance: number) {\n    const x = Math.cos(this.angle * Math.PI / 180) * distance;\n    const y = Math.sin(this.angle * Math.PI / 180) * distance;\n    return new THREE.Vector3(x, y, 0);\n  }\n\n  public translateOnAxis(axis: THREE.Vector3, distance: number) {\n    this.group.translateOnAxis(axis, distance);\n  }\n\n  public updatePosition(delay: number) {\n    this.translateOnAxis(this.translate(delay * this.speed), 1);\n    this.distance += delay * this.speed;\n    this.rotateZ(this.rotateSpeed * delay);\n    this.panelMaterial.opacity = this.opacity(this.distance, this.showDistance) * this.panelOpacity;\n    this.lineMaterial.opacity = this.opacity(this.distance, this.showDistance);\n    if (this.distance > this.showDistance.endHide) {\n      this.delete();\n    }\n  }\n\n  public delete() {\n    this.onDelete(this);\n    this.mesh.geometry.dispose();\n    this.line.geometry.dispose();\n  }\n\n  public opacity(distance: number, showDistance: ILineDistanceOption) {\n    if (this.distance < showDistance.endShow) {\n      return (this.distance - showDistance.startShow) / (showDistance.endShow - showDistance.startShow);\n    } else if (this.distance > showDistance.startHide) {\n      return (showDistance.endHide - this.distance) / (showDistance.endHide - showDistance.startHide);\n    } else {\n      return 1;\n    }\n  }\n\n  public transition(delay: number) {\n    this.updatePosition(delay);\n  }\n}\n","export function range(start: number, end: number, step: number = 1, fromRight: boolean = false) {\n  var index = -1,\n    length = Math.max(Math.ceil((end - start) / step), 0),\n    result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n};\n","import { Vector2 } from 'three'\n\nexport class node {\n  private baseRange: number;\n  private angle: number;\n  private center: Vector2;\n  private lastStrength: number = 0;\n  private theStrength: number = 0;\n  private targetRange: number = 0;\n  private _range: number = 0;\n  constructor(baseRange: number, angle: number, center: Vector2) {\n    this.baseRange = baseRange;\n    this.angle = angle;\n    this.center = center;\n  }\n  public get positionA() {\n    const range = this._range + this.baseRange;\n    const x = Math.cos(this.angle * Math.PI / 180) * range;\n    const y = Math.sin(this.angle * Math.PI / 180) * range;\n    return new Vector2(this.center.x + x, this.center.y + y);\n  }\n  public get positionB() {\n    const range = this._range * -1 + this.baseRange;\n    const x = Math.cos(this.angle * Math.PI / 180) * range;\n    const y = Math.sin(this.angle * Math.PI / 180) * range;\n    return new Vector2(this.center.x + x, this.center.y + y);\n  }\n  public set strength(newStrength: number) {\n    this.lastStrength = this.theStrength;\n    this.theStrength = newStrength;\n    this.targetRange = Math.max(this.theStrength - this.lastStrength, 0);\n    if (this.targetRange > this._range) this._range = this.targetRange;\n  }\n  public transition(delay: number) {\n    this._range = Math.max(this._range - delay * this._range * 5, 0);\n  }\n}\n","import { EventEmitter } from 'events';\nimport * as THREE from 'three';\n\nexport interface IAudioOption {\n  fftsize?: number\n}\nexport interface loadOption {\n  src: string,\n  onLoad?: (buffer: THREE.AudioBuffer) => void\n  onPrgress?: (xhr: ProgressEvent) => void\n  onError?: () => void\n}\n\nexport class Audio extends EventEmitter {\n  public listener: THREE.AudioListener;\n  private sound: THREE.Audio;\n  private audioLoader: THREE.AudioLoader;\n  private analyser: THREE.AudioAnalyser;\n  public readonly frequencyBinCount: number;\n  constructor(option: IAudioOption = {}) {\n    super()\n    this.listener = new THREE.AudioListener();\n    this.sound = new THREE.Audio(this.listener);\n    this.audioLoader = new THREE.AudioLoader();\n    this.analyser = new THREE.AudioAnalyser(this.sound, option.fftsize || 256);\n    this.frequencyBinCount = this.analyser.analyser.frequencyBinCount;\n  }\n  public load (\n    option: loadOption\n  ) {\n    const {\n      src,\n      onLoad = (buffer: THREE.AudioBuffer) => void(0),\n      onPrgress = (xhr: ProgressEvent) => void(0),\n      onError = () => void(0)\n    } = option\n    this.audioLoader.load(src, (buffer: THREE.AudioBuffer) => {\n      this.sound.setBuffer(buffer);\n      this.sound.setLoop(true);\n      this.sound.play();\n      return onLoad(buffer);\n    }, onPrgress, onError);\n  }\n  public setVolume (volume:number) {\n    this.sound.setVolume(volume);\n  }\n  public getFrequencyData () {\n    return this.analyser.getFrequencyData()\n  }\n}\n","import * as _THREE from 'three'\n\nconst THREE = Object.assign(_THREE, {}) as any\n\nexport default THREE\n","import { randomRange } from './util/randomRange';\nimport { Triangle } from './Triangle';\nimport { range } from './util/range';\nimport { node } from './node';\nimport { Audio } from './audio';\nimport THREE from './lib/ExtendThree';\n\nimport './lib/LuminosityHighPassShader.js';\nimport './lib/CopyShader.js';\nimport './lib/EffectComposer.js';\nimport './lib/RenderPass.js';\nimport './lib/ShaderPass.js';\nimport './lib/UnrealBloomPass';\n\nexport interface IAzusaOption {\n  view?: HTMLCanvasElement;\n  width?: number;\n  height?: number;\n  subdivisionSize?: number;\n  cutEnd?: number;\n  cutFront?: number;\n}\n\nexport class Azusa {\n  private renderer: THREE.WebGLRenderer;\n  private camera: THREE.PerspectiveCamera;\n  private scene: THREE.Scene;\n  private lines: THREE.Line[];\n  private lineA: THREE.Line;\n  private lineB: THREE.Line;\n  private nodes: node[];\n  private clock: THREE.Clock;\n  private scale: number = 1;\n  private lineGroup: THREE.Group;\n  private composer: any;\n  private bloomPass: any;\n  private cutFront: number;\n  private cutEnd: number;\n  private TriangleGroup: THREE.Group;\n  private Triangles: Triangle[] = [];\n  public audio: Audio;\n  constructor(option: IAzusaOption = {}) {\n    const {\n      width = window.innerWidth,\n      height = window.innerHeight,\n      subdivisionSize = 1024,\n      cutFront = 0,\n      cutEnd = 0\n    } = option;\n    this.cutFront = cutFront;\n    this.cutEnd = cutEnd;\n    const renderer = new THREE.WebGLRenderer({\n      canvas: option.view,\n      alpha: true,\n      antialias: true\n    });\n    renderer.setSize(width, height);\n\n    const camera = new THREE.PerspectiveCamera(45, width / height, 1, 500);\n    camera.position.set(0, 0, 100);\n    camera.lookAt(new THREE.Vector3(0, 0, 0));\n\n    const scene = new THREE.Scene();\n\n    this.composer = new THREE.EffectComposer(renderer)\n    this.composer.setSize(width, height);\n    const renderScene = new THREE.RenderPass(scene, camera)\n    this.composer.addPass(renderScene);\n    this.bloomPass = new THREE.UnrealBloomPass(new THREE.Vector2(window.innerWidth, window.innerHeight), 1.5, 0.2, 0);\n    this.composer.addPass(this.bloomPass);\n    const copyShader = new THREE.ShaderPass(THREE.CopyShader);\n    copyShader.renderToScreen = true;\n    this.composer.addPass(copyShader);\n\n    this.scene = scene;\n    this.camera = camera;\n\n\n    this.audio = new Audio({ fftsize: subdivisionSize });\n    const frequencyBinCount = this.loadAudio(subdivisionSize).frequencyBinCount;\n\n    const lineMaterial = new THREE.LineBasicMaterial({ color: 0x03a9f4 });\n\n    const nodeCount = frequencyBinCount - cutEnd - cutFront\n    this.nodes = range(0, nodeCount).map((index) => {\n      return new node(20, (index / nodeCount * 360 + 45) % 360, new THREE.Vector2(0, 0));\n    })\n\n    this.lineA = new THREE.Line(\n      new THREE.BufferGeometry().addAttribute('position',\n        this.renderGeometries(\n          this.nodes.map(node => node.positionA)\n        ).setDynamic(true))\n      , lineMaterial);\n\n    this.lineB = new THREE.Line(\n      new THREE.BufferGeometry().addAttribute('position',\n        this.renderGeometries(\n          this.nodes.map(node => node.positionB)\n        ).setDynamic(true))\n      , lineMaterial);\n\n\n    this.lines = range(0, nodeCount).map((index) => {\n      return new THREE.Line(\n        new THREE.BufferGeometry().addAttribute('position',\n          this.renderGeometries(\n            [this.nodes[index].positionA, this.nodes[index].positionB]\n          ).setDynamic(true))\n        , lineMaterial);\n    })\n    this.lineGroup = this.loadLine();\n\n    this.TriangleGroup = this.loadTriangle();\n\n    this.scene.add(this.TriangleGroup);\n    this.scene.add(this.lineGroup);\n    this.renderer = renderer;\n    this.clock = new THREE.Clock();\n    this.render();\n    this.resize(width, height);\n  }\n\n  loadGui() {\n    const params = {\n      projection: 'normal',\n      background: false,\n      exposure: 1.0,\n      bloomStrength: 1.5,\n      bloomThreshold: 0.2,\n      bloomRadius: 0\n    };\n    const gui = new (window as any).dat.GUI();\n    gui.add(params, 'exposure', 0.1, 2);\n    gui.add(params, 'bloomThreshold', 0.0, 1.0).onChange((value: any) => {\n      this.bloomPass.threshold = Number(value);\n    });\n    gui.add(params, 'bloomStrength', 0.0, 3.0).onChange((value: any) => {\n      this.bloomPass.strength = Number(value);\n    });\n    gui.add(params, 'bloomRadius', 0.0, 1.0).onChange((value: any) => {\n      this.bloomPass.radius = Number(value);\n    });\n    gui.open();\n  }\n\n  resize(width: number, height: number) {\n    this.camera.aspect = width / height;\n    if (width <= 425) {\n      this.camera.fov = 70;\n    } else {\n      this.camera.fov = 45;\n    }\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize(width, height);\n    this.composer.setSize(width, height);\n  }\n\n  private loadLine() {\n\n    const lineGroup = new THREE.Group();\n    lineGroup.add(this.lineB);\n    lineGroup.add(this.lineA);\n\n    this.lines.forEach(line => lineGroup.add(line));\n    return lineGroup;\n  }\n\n  private loadAudio(fftsize: number) {\n    this.camera.add(this.audio.listener);\n    return this.audio;\n  }\n\n  private loadTriangle() {\n    const TriangleGroup = new THREE.Group();\n    const material = new THREE.MeshBasicMaterial({ color: 0x03a9f4 });\n    const lineMaterial = new THREE.LineBasicMaterial({ color: 0x03a9f4 });\n    setInterval(this.addTriangle.bind(this, material, lineMaterial), 500);\n    return TriangleGroup;\n  }\n\n  private addTriangle(\n    material: THREE.MeshBasicMaterial = new THREE.MeshBasicMaterial({ color: 0x03a9f4 }),\n    lineMaterial: THREE.LineBasicMaterial = new THREE.LineBasicMaterial({ color: 0x03a9f4 })) {\n    // const point = this.Triangles.length;\n    const triangle = this.makeTriangle(material, lineMaterial, (t) => {\n      this.Triangles = this.Triangles.filter((triangle) => {\n        return triangle !== t;\n      })\n      this.TriangleGroup.remove(t.group);\n    });\n    this.TriangleGroup.add(triangle.group);\n    this.Triangles.push(triangle);\n  }\n\n  private makeTriangle(\n    material: THREE.MeshBasicMaterial = new THREE.MeshBasicMaterial({ color: 0x03a9f4 }),\n    lineMaterial: THREE.LineBasicMaterial = new THREE.LineBasicMaterial({ color: 0x03a9f4 }),\n    cb: (t: Triangle) => void) {\n    const triangle = new Triangle(2, new THREE.Vector3(0, 0, 0), Math.random() * 360, randomRange(5, 1), randomRange(0.1, 0.02), material, lineMaterial, {\n      startShow: 15,\n      endShow: 30,\n      startHide: 60,\n      endHide: 70\n    }, cb)\n    return triangle;\n  }\n\n  private renderGeometries(vertices: THREE.Vector2[]) {\n    const res: number[] = [];\n    vertices = vertices.concat(vertices[0])\n    vertices.forEach((value) => {\n      res.push(value.x, value.y, 0);\n    })\n    return new THREE.BufferAttribute(new Float32Array(res), 3);\n  }\n\n  private updateGeometries() {\n    if (this.nodes) {\n      this.lineGroup.scale.set(this.scale, this.scale, this.scale);\n      const geometryA = this.lineA.geometry as THREE.BufferGeometry;\n      const AttributeA = geometryA.getAttribute('position') as THREE.BufferAttribute;\n      const geometryB = this.lineB.geometry as THREE.BufferGeometry;\n      const AttributeB = geometryB.getAttribute('position') as THREE.BufferAttribute;\n\n      const positions = this.nodes.map((value) => {\n        return [value.positionA, value.positionB];\n      });\n      positions.forEach((position, index) => {\n        AttributeA.set([position[0].x, position[0].y], index * 3);\n        AttributeB.set([position[1].x, position[1].y], index * 3);\n        const geometry = (this.lines[index].geometry as THREE.BufferGeometry);\n        const Attribute = geometry.getAttribute('position') as THREE.BufferAttribute;\n        Attribute.set(\n          [position[0].x, position[0].y, 0,\n          position[1].x, position[1].y, 0], 0\n        )\n        Attribute.needsUpdate = true;\n      })\n      AttributeA.set([AttributeA.array[0], AttributeA.array[1]], positions.length * 3);\n      AttributeB.set([AttributeB.array[0], AttributeB.array[1]], positions.length * 3);\n      AttributeA.needsUpdate = true;\n      AttributeB.needsUpdate = true;\n    }\n  }\n\n  private render() {\n    this.composer.render();\n    let audioDate = this.audio.getFrequencyData()\n    const Delta = this.clock.getDelta();\n    const cutAudioDate = audioDate.slice(this.cutFront, audioDate.length - this.cutEnd)\n    this.nodes.forEach((node, index, array) => {\n      node.strength = cutAudioDate[(index) % array.length] * 0.1;\n      node.transition(Delta);\n    })\n\n    this.scale = 1 + audioDate[Math.ceil(audioDate.length * 0.05)] / 1000;\n    this.updateGeometries();\n    this.Triangles.forEach(triangle => triangle.transition(Delta));\n    // geometries.forEach((geometry, index) => {\n    //   this.lines[index].geometry = geometry\n    // });\n    requestAnimationFrame(this.render.bind(this));\n  }\n}\n\nexport default Azusa\n"],"sourceRoot":""}